<?php

global $b, $global_names;

$global_names = array(
		      'node_name_human' => 'Admin Note',
		      'node_name_machine' => 'admin_note',
		      'block_name_human' => 'Admin Block',
		      'block_name_machine' => 'admin_block',
		      'module_name_machine' => 'comment_node_block',
		      );

$b = 'sick and tired';

//==============================================================
/* Database Init/Schema */
//==============================================================

/* Creates the infinity_blah table when module is first installed */
function admin_note_schema() {
  global $global_names;
  /* $schema[$global_names['node_name_machine']] = array( */
  $schema['admin_note'] = array(
						      'description' => 'Table for admin note comments', 
						      'fields' => array(
									'id' => array(
										      'description' => 'The primary identifier.', 
										      'type' => 'serial', 
										      'unsigned' => TRUE, 
										      'not null' => TRUE,
										      ), 
									'user_name' => array(
											'description' => 'The user name.',
											'type' => 'varchar',
											'length' => 40,
											/* 'type' => 'text', */
											'not null' => TRUE,
											),
									'nid' => array(
										       'description' => 'The node id.', 
										       'type' => 'int', 
										       'not null' => TRUE, 
										       ), 
									/* 'vid' => array( */
									/*   'description' => 'The version id.',  */
									/*   'type' => 'int',  */
									/*   'not null' => TRUE,  */
									/* ),  */
									), 
						      'unique keys' => array(
									     'id' => array('id'),
									     ), 
						      'primary key' => array('id'),
						      );
  return $schema;
}


//==============================================================
/* Node & Form Stuff */
//==============================================================

//Drupal adds this block type automatically
function comment_node_block_node_info() {
  global $global_names;
  $form = array();
  $form['admin_note'] = array(
			      /* 'type' => 'admin_note',  */
			      'name' => t($global_names['node_name_human']),
			      'module' =>'admin_note' ,
			      'description' => 'A note to be displayed in the admin_note_block',
			      'help' => 'Add a comment about any specific issue here',
			      'base' => 'node_content',
			      'has_title' => false,
			      /* 'title_label' => 'Add some super important note stuff here!', */
			      'has_body' => true,
			      'body_label' => 'Add some super important note stuff here!',
			      /* 'custom' => 1, */
			      /* 'modified' => 1, */
			      'min_word_count' => 0,
			      'locked' => 0,
			      'title_label' => 'Notes On Available Updates'
			      );
  return $form;
}

/* Form for adding a note to the admin_comment block
   Name should be of the form $globalname['node_name_machine']_form */
function admin_note_form($form_state) {
  /* $query = db_query("SELECT body FROM node_revisions WHERE nid = 9"); */
  /* $result = db_result($query); */

  $form = array();
  $form['description'] = array(
			       '#type' => 'item',
			       /* '#prefix' => '<div><h2>',		 */
			       /* '#suffix' => '</h2></div>', */
			       '#title' => t('Important Notes Concerning The Following Updates'),
			       '#suffix' => '</br>',
			       );
  $form['name'] = array(
			/* '#prefix' => '<div><p>',		 */
			/* '#suffix' => '</p></div>', */
			'#title' => t('Your Name'),
			'#type' => 'textfield',
			'#size' => '20',
			/* '#default_value' => "Value", */
			/* '#description' => "Identify Yourself.", */
			'#required' => TRUE,
			'#suffix' => '</br>',
			);
  $form['body'] = array(
			/* '#prefix' => '<div><p>',		 */
			/* '#suffix' => '</p></div>', */
			'#title' => t('Add a note'),
			'#type' => 'textarea',
			'#cols' => '10',
			'#rows' => '2',
			/* '#default_value' => $result, */
			/* '#description' => "Tell Us About A Problem.", */
			'#required' => TRUE,
			'#suffix' => '</br>',
			);
  $form['submit'] = array(
			  '#type' => 'submit',
			  '#value' => 'Submit',
			  );
  /* $form['junk'] = array( */
  /* 			/\* '#prefix' => '<div><p>',		 *\/ */
  /* 			/\* '#suffix' => '</p></div>', *\/ */
  /* 			'#title' => t('Some Junke'), */
  /* 			'#type' => 'textfield', */
  /* 			'#size' => '20'); */
  return $form;
}

/* function admin_note_validate($form, &$form_state) { */
/* } */

function admin_note_form_submit($form, &$form_state) {
  /* $query = db_query("SELECT body FROM node_revisions WHERE nid = 9"); */
  /* $result = db_result($query); */
  $new_note = $form_state['values']['body'];
  $new_note_taker = $form_state['values']['name'];
  $note_nid = new_admin_note($new_note);
  /* db_query("INSERT INTO {admin_note} (nid, vid, user_name) VALUES (%d, %d, %s)", $node->nid, $node->vid, $node->user);  */
  db_query("INSERT INTO {admin_note} (nid, user_name) VALUES (%d,' %s')", $note_nid, $new_note_taker); 

  /* $newest_text = $result . "\n" . "{$new_note}: <b>{$new_note_taker}</b>"; */
  /* $query = db_query("UPDATE node_revisions SET body='{$newest_text}', teaser='{$newest_text}' WHERE nid = 9"); */
  /* drupal_set_message(t('Your form has been saved.')); */
}

function new_admin_note ($body) {
  global $global_names;
  $node = new stdClass();
  $node->type = $global_names['node_name_machine'];
  $node->body = $body;
  $node->created = strtotime('now');
  $node->changed = strtotime('now'); 
  $node->created = strtotime('now');
  $node->status = 1;
  $node->comment = 0;
  $node->promote = 0;
  $node->moderate = 0;
  $node->sticky = 0;
  node_save($node);
  return $node->nid;
}

//==============================================================
/* Using node hook stuff */
//==============================================================


/* function admin_note_insert($node){ */
/*   db_query("INSERT INTO {admin_note} (nid, vid, user_name) VALUES (%d, %d, %s)", $node->nid, $node->vid, $node->user_name); */
/* } */
/* function admin_note_update($node){ */
/*   if (node->revision) { */
/*     admin_note_insert($node); */
/*   } */
/*   else { */
/*     db_query("UPDATE {admin_note} SET user_name= '%s' WHERE vid =  %d", $node->user_name, $node->vid); */
/*   } */
/* } */
/* function admin_note_delete(&$node){ */
/*       db_query("DELETE FROM {admin_note} WHERE nid =  %d", $node->nid); */
/* } */
/* function admin_note_load($node){ */
/*   return db_fetch_object(db_query("SELECT user_name FROM {admin_note} WHERE vid = %d", $node->vid)); */
/* } */
/* function admin_note_view($node, $teaser = FALSE, $page = FALSE){ */
/*   /\* if (!$teaser) { *\/ */
/*     $node = node_prepare($node, $teaser); */
/*     $node->content['user_name'] = array( */
/* 				   '#value' => theme('admin_note_user_name', $node), */
/* 				   '#weight' => 2 */
/* 				   ); */
/*   /\* } *\/ */
/*   /\* if ($teaser) { *\/ */
/*   /\*   $node = node_prepare($node, $teaser); *\/ */
/*   /\* } *\/ */
/* } */

/* function admin_note_theme(){ */
/*   return array( */
/* 	       'admin_note_user' => array( */
/* 					  'arguments' => array('node'),),); */
/* } */

/* function theme_admin_note_user($node) { */
/*   $output = '<b>' . check_markup($node->user_name) . '</b>'; */
/*   return $output; */
/* } */


//==============================================================
/* Block Helper Stuff */
//==============================================================

/* Create the view that we will see in the block
   - get the previous admin_note nodes 
   - display the form at the bottom of the block
*/

/* function phptemplate_preprocess_page(&vars) */
/* function comment_node_block_preprocess(&vars) */
/* { */
/*   if (current_path() == 'admin/reports/page') */
/*     { */
/*       $template_name = 'hal_report_template'; */
/*       $vars['template_files'][] = $template_name; */
/*     } */
/*     /\* var_dump($vars); //output: nothings that reference the views! *\/ */
/*     /\* if($_GET['q'] == 'my/view/path') *\/ */
/*     /\* { *\/ */
/*     /\*     drupal_add_js([...]); *\/ */
/*     /\*     drupal_add_css([...]); *\/ */
/*     /\* } *\/ */
/* } */

function comment_node_block_menu_alter (&$items) {
  /* $items['admin/reports/updates']['access callback'] = 'user_access'; */
  $items['admin/reports/updates']['page callback'] = 'reverse_content';
  /* $items['admin/reports/updates']['file'] => 'comment_node_block.module', */
}

function reverse_content() {
  global $global_names;
  /* return "blaaaaaaah..."; */
if (module_exists('update')) { 
  $reports = update_status();
  $my_block = module_invoke('comment_node_block', 'block', 'view', $global_names['block_name_machine'] );
  /* $shit = theme('block',$block) */
  $new_content = $my_block['content'] . update_status();
  return $new_content;
    /* return update_status(); */
  }
  /* return update_status($meaningless); */
}

function get_admin_notes () {
  /* db_query("SELECT user_name FROM {admin_note} WHERE vid = %d", $node->vid"); */
  /* return db_fetch_object(db_query("SELECT user_name FROM {admin_note} WHERE vid = %d", $node->vid)); */
    $headers = array(
		   /* 'data' => t('Note'), */
		   'Note',
		   'User',
		   'Time',
		   );
  /* $out = ''; */

  $query = db_query("SELECT n_r.body, a_n.user_name, n_r.timestamp FROM node_revisions n_r JOIN {admin_note} a_n ON (n_r.nid = a_n.nid) ORDER BY n_r.timestamp ASC");
  /* foreach ($query as $result) { */
  /* while ($result = db_result($query)) { */

  while ($result = db_fetch_object($query)) {
    /* list($body, $user_name) = $result; */

    /* $body = $result->body; */
    /* $user_name = $result->user_name; */
    /* $time = date('D, d M Y H:i:s', $result->timestamp); */
    /* $out .= $body . "<b>" . $user_name . "</b>" . $time . " </br>"; */

    $rows[] = array(
		  $result->body,
		  $result->user_name,
		  date('D, d M Y H:i:s', $result->timestamp),
		  );
  }
  return theme('table', $headers, $rows);
  /* return $out; */
}

function get_admin_comment_view () {
  global $global_names;
  /* $temp = node_load(9); */
  //node_show only seems to get the body of the node and not the title:

  /* $output = node_show($temp, NULL);  //second parameter is the first comment i believe */
  $output = get_admin_notes();

  /* $form =  drupal_get_form($global_names['node_name_machine'] . '_form'); */
  $form =  drupal_get_form('admin_note_form');
  return "</br><div>" . $output . "</div></br>" . $form;
  /* return $form; */
}

/* When someone submits the form in admin_comment block
   handle the data and save it to the database
   - probably should be part of the form validatation code for admin_note_form actually... 
*/
function save_admin_note_shit () {
}

//==============================================================
/* Block Init Stuff */
//==============================================================

//Drupal adds this block type automatically
function comment_node_block_block($op = 'list', $delta = 0, $edit = array()) {
  global $global_names;
  switch ($op) {
  case 'list':
    $blocks = array();
    $blocks[$global_names['block_name_machine']] = array(
							 'info' => t( $global_names['block_name_human']),
							 'region' => 'content',
							 'title' => t('Report/Configuration Notes'),
							 'weight' => -10,
							 'status' => 1,
							 'visibility' => 1,
							 /* 'properties' => array(), */ //Drupal7 only
							 'pages' => 'admin/reports/updates',
							 );
    return $blocks;
  case 'view':
    $block_content = array(
			   'subject' => "Insert Relevant Comments Regarding Modules",
			   /* 'content' => "Shazam", */
			   /* 'content' => drupal_get_form($global_names['node_name_machine'] . '_form'),  */
			   /* 'content' => node_add($global_names['node_name_machine']), */
			   'content' => get_admin_comment_view(),
			   );
    return $block_content;
    break;
    /* case 'save': */
    /* /\* case 'configure': *\/ */
    /* default: */
    /*   return admin_comment_get_block($delta); */
  }
}

//==============================================================
/* Helper functions */
//==============================================================

function get_all_nodes_of_type($node_type) {
  $result = db_query("SELECT nid FROM node WHERE type = '%s' ", $node_type);
  $nids = array();
  while ($obj = db_fetch_object ($result)) {
    $nids[] = $obj->nid;
  }
  return $nids;
}

function delete_all_nodes_of_type($node_type) {
  $nodes = get_all_nodes_of_type($node_type);
  foreach ($nodes as $node) {
    node_delete($node);
  }
}

function delete_blocks_from_module($block_module) {
  /* echo sprintf("DELETE FROM blocks WHERE module = '%s' ", $block_module); */
  $result = db_query("DELETE FROM blocks WHERE module = '%s' ", $block_module);
}

//==============================================================
/* Module Lifecycle Functions */
//==============================================================

function comment_node_block_install() {
  //Delete all nodes of node_type 'admin_note'
  //Delete 'admin_note' node type from the node_type table

  /* admin_note_schema(); */
}
  

function comment_node_block_enable() {
  global $global_names;
  //Make sure that our admin_note block is created
  /* - this compares the blocks declared in moduls to the blocks in the table and reconciles? */
  _block_rehash();

  drupal_install_schema('admin_note');
}

function comment_node_block_disable() {
  global $global_names, $b;
  //Delete all nodes of node_type 'admin_note'
  //Delete 'admin_note' node type from the node_type table

  /* delete_all_nodes_of_type('admin_note'); */
  /* node_type_delete('admin_note'); */
 
  delete_blocks_from_module($global_names['module_name_machine']);
}

/* function comment_node_block_uninstall() { */
/*   //Delete all nodes of node_type 'admin_note' */
/*   //Delete 'admin_note' node type from the node_type table */
/* } */
  
//==============================================================
  
?>

